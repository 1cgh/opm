
#Использовать logos

Перем Лог;

Перем УстановленныеПакеты;

Функция ПакетУстановлен(Знач ИмяПакета) Экспорт

	Возврат УстановленныеПакеты[ИмяПакета] = Истина;

КонецФункции

Процедура Обновить() Экспорт
	
	КаталогБиблиотек = ОбъединитьПути(КаталогПрограммы(), ПолучитьЗначениеСистемнойНастройки("lib.system"));
	Лог.Отладка("КаталогБиблиотек " + КаталогБиблиотек);
	УстановленныеПакеты = Новый Соответствие;
	
	НайденныеФайлы = НайтиФайлы(КаталогБиблиотек, ПолучитьМаскуВсеФайлы());
	Для Каждого ФайлКаталога Из НайденныеФайлы Цикл
		Если ФайлКаталога.ЭтоКаталог() Тогда
			ДобавитьУстановленныйПакет(ФайлКаталога);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьУстановленныеПакеты() Экспорт
	Возврат УстановленныеПакеты;
КонецФункции

Процедура Инициализация()

	Лог = Логирование.ПолучитьЛог("oscript.app.opm");
	//Лог.УстановитьУровень(УровниЛога.Отладка);
	
	Обновить();
	
КонецПроцедуры

Процедура ДобавитьУстановленныйПакет(Знач ФайлКаталога)
	
	ПутьКФайлуМетаданных = ОбъединитьПути(ФайлКаталога.ПолноеИмя, Константы.ИмяФайлаМетаданныхПакета);
	ФайлМетаданных = Новый Файл(ПутьКФайлуМетаданных);
	Если ФайлМетаданных.Существует() Тогда
		
		Чтение = Новый ЧтениеXML;
		Чтение.ОткрытьФайл(ПутьКФайлуМетаданных);
		Лог.Отладка("XML загружен");
		Сериализатор = Новый СериализацияМетаданныхПакета;
		МетаОписаниеПакета = Сериализатор.ПрочитатьXML(Чтение);
		
		Чтение.Закрыть();

	Иначе
		МетаОписаниеПакета = Истина;
	КонецЕсли;

	УстановленныеПакеты.Вставить(ФайлКаталога.Имя, МетаОписаниеПакета);
	
КонецПроцедуры

Инициализация();
