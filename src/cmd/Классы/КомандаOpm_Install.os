///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ОписаниеКоманды(Знач КомандаПриложения) Экспорт
	
	КомандаПриложения.Опция("a all", Ложь, "Установить все пакеты, зарегистрированные в хабе");
	КомандаПриложения.Опция("f file", "", "Указать файл из которого нужно установить пакет. Поддерживает указание маски файла для пакетной установки");
	КомандаПриложения.Опция("l local", Ложь, "Установить пакеты в локальный каталог oscript_modules");
	КомандаПриложения.Опция("d dest", "", "Переопределить стандартный каталог в который устанавливаются пакеты (вместо oscript_modules)");

	КомандаПриложения.Аргумент("PACKAGE", "", "Имя пакета в хабе. Чтобы установить конкретную версию, используйте ИмяПакета@ВерсияПакета")
						.ТМассивСтрок()
						.Обязательный(Ложь);

	// КомандаПриложения.Спек = "(-a | --all | -l | --local | -d | --dest )";

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач КомандаПриложения) Экспорт
	
	УстановкаВЛокальныйКаталог = КомандаПриложения.ЗначениеОпции("local");
	УстановкаВсехПакетов = КомандаПриложения.ЗначениеОпции("all");
	КаталогУстановки = КомандаПриложения.ЗначениеОпции("dest");
	ФайлПакетаУстановки = КомандаПриложения.ЗначениеОпции("file");
	МассивПакетовКУстановке = КомандаПриложения.ЗначениеАргумента("PACKAGE");

	РежимУстановки = РежимУстановкиПакетов.Глобально;
	Если УстановкаВЛокальныйКаталог Тогда
		РежимУстановки = РежимУстановкиПакетов.Локально;
	КонецЕсли;
	
	ЦелевойКаталог = Неопределено;

	Если Не ПустаяСтрока(КаталогУстановки) Тогда
		ЦелевойКаталог = КаталогУстановки;
	КонецЕсли;

	Если РежимУстановки = РежимУстановкиПакетов.Локально Тогда
		Лог = Логирование.ПолучитьЛог(ПараметрыПриложенияOpm.ИмяЛогаСистемы());
		Лог.Предупреждение("При локальной установке параметр -dest игнорируется");
		ЦелевойКаталог = Неопределено;
	КонецЕсли;

	Если УстановкаВсехПакетов Тогда
		РаботаСПакетами.УстановитьВсеПакетыИзОблака(РежимУстановки, ЦелевойКаталог);
	ИначеЕсли ПустаяСтрока(ФайлПакетаУстановки) И МассивПакетовКУстановке.Количество() = 0 Тогда
		РаботаСПакетами.УстановитьПакетыПоОписаниюПакета(РежимУстановки, ЦелевойКаталог);
	ИначеЕсли НЕ ПустаяСтрока(ФайлПакетаУстановки) Тогда
		
		РазобранныйАдрес = СтрРазделить(ФайлПакетаУстановки, ПолучитьРазделительПути());
		Путь = ".";
		Маска = ФайлПакетаУстановки;
		Если РазобранныйАдрес.Количество() > 1 Тогда // отделим последнюю секцию как имя файла, а остальное опять соберем в строку пути
			
			Маска = РазобранныйАдрес[РазобранныйАдрес.Количество() - 1];
			РазобранныйАдрес.Удалить(РазобранныйАдрес.Количество() - 1);
			Путь = СтрСоединить(РазобранныйАдрес, ПолучитьРазделительПути());
			
		КонецЕсли;
		
		ФайлыПоМаске = НайтиФайлы(Путь, Маска);
		Для Каждого ФайлПакета Из ФайлыПоМаске Цикл
			
			РаботаСПакетами.УстановитьПакетИзФайла(ФайлПакета.ПолноеИмя, РежимУстановки, ЦелевойКаталог);
			
		КонецЦикла;
		
	Иначе

		Для каждого ИмяПакета Из МассивПакетовКУстановке Цикл
			РаботаСПакетами.УстановитьПакетИзОблака(ИмяПакета, РежимУстановки, ЦелевойКаталог);
		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры
